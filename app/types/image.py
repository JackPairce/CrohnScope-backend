"""
Image related data models and types.
"""

# Generated by Copilot
from typing import List, Optional, Dict
from pydantic import BaseModel


class ImageBase(BaseModel):
    id: int
    filename: str


class ApiImage(ImageBase):
    src: str  # Base64 encoded image
    is_done: bool = False  # If the user has finished annotating the image


class SaveMaskResponse(BaseModel):
    """Model for mask saving response."""

    id: int
    cell_id: int
    src: str  # Base64 encoded mask


class RegionInfo(BaseModel):
    """Model for region information in a labeled mask."""

    id: int
    area: int
    boundingBox: Dict[str, int]
    centroid: Dict[str, int]


class Mask(BaseModel):
    id: int
    image_id: int
    mask_path: str
    cell_id: Optional[int] = None
    is_mask_done: bool = False  # If the user has finished editing the mask
    is_annotation_done: bool = (
        False  # If the user has finished setting the mask's health status
    )


class ApiMask(Mask):
    src: str  # Base64 encoded mask
    labeledMask: Optional[str] = (
        None  # Base64 encoded labeled mask where each region has a unique color
    )
    regions: Optional[List[RegionInfo]] = None  # List of region statistics


class ImageWithMasks(ApiImage):
    masks: List[ApiMask] = []


class ApiCell(BaseModel):
    id: int
    name: str
    description: Optional[str] = None
